# ConfigMap for shared environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: musicbrainz-config
data:
  DATABASE_URL: "postgresql://user:password@postgres-service:5432/musicbrainz"
  ARTIST_SERVICE_URL: "http://artist-service:8001"
  ALBUM_SERVICE_URL: "http://album-service:8002"
  RECOMMENDATION_SERVICE_URL: "http://recommendation-service:8003"
  API_GATEWAY_URL: "http://api-gateway-service:8000"

---
# PersistentVolumeClaim for PostgreSQL data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# PostgreSQL Deployment (Single instance for database)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1  # Database should have only 1 replica
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "musicbrainz"
            - name: POSTGRES_USER
              value: "user"
            - name: POSTGRES_PASSWORD
              value: "password"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - user
                - -d
                - musicbrainz
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - user
                - -d
                - musicbrainz
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

---
# Database Initialization Job (Runs once)
apiVersion: batch/v1
kind: Job
metadata:
  name: db-init-job
spec:
  template:
    metadata:
      labels:
        app: db-init
    spec:
      restartPolicy: OnFailure
      containers:
        - name: db-init
          image: musicbrainz-db-init
          imagePullPolicy: Never  # Use locally built image
          envFrom:
            - configMapRef:
                name: musicbrainz-config
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']

---
# Artist Service Deployment (4 replicas)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artist-service-deployment
  labels:
    app: artist-service
spec:
  replicas: 4
  selector:
    matchLabels:
      app: artist-service
  template:
    metadata:
      labels:
        app: artist-service
    spec:
      containers:
        - name: artist-service
          image: musicbrainz-artist-service
          imagePullPolicy: Never
          ports:
            - containerPort: 8001
          envFrom:
            - configMapRef:
                name: musicbrainz-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 10
            periodSeconds: 5

---
# Artist Service
apiVersion: v1
kind: Service
metadata:
  name: artist-service
spec:
  selector:
    app: artist-service
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
  type: ClusterIP

---
# Album Service Deployment (4 replicas)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: album-service-deployment
  labels:
    app: album-service
spec:
  replicas: 4
  selector:
    matchLabels:
      app: album-service
  template:
    metadata:
      labels:
        app: album-service
    spec:
      containers:
        - name: album-service
          image: musicbrainz-album-service
          imagePullPolicy: Never
          ports:
            - containerPort: 8002
          envFrom:
            - configMapRef:
                name: musicbrainz-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8002
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8002
            initialDelaySeconds: 10
            periodSeconds: 5

---
# Album Service
apiVersion: v1
kind: Service
metadata:
  name: album-service
spec:
  selector:
    app: album-service
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
  type: ClusterIP

---
# Recommendation Service Deployment (4 replicas)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendation-service-deployment
  labels:
    app: recommendation-service
spec:
  replicas: 4
  selector:
    matchLabels:
      app: recommendation-service
  template:
    metadata:
      labels:
        app: recommendation-service
    spec:
      containers:
        - name: recommendation-service
          image: musicbrainz-recommendation-service
          imagePullPolicy: Never
          ports:
            - containerPort: 8003
          envFrom:
            - configMapRef:
                name: musicbrainz-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8003
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8003
            initialDelaySeconds: 10
            periodSeconds: 5

---
# Recommendation Service
apiVersion: v1
kind: Service
metadata:
  name: recommendation-service
spec:
  selector:
    app: recommendation-service
  ports:
    - protocol: TCP
      port: 8003
      targetPort: 8003
  type: ClusterIP

---
# API Gateway Deployment (4 replicas)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  labels:
    app: api-gateway
spec:
  replicas: 4
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: musicbrainz-api-gateway
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: musicbrainz-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
spec:
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP

---
# Streamlit UI Deployment (4 replicas)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamlit-ui-deployment
  labels:
    app: streamlit-ui
spec:
  replicas: 4
  selector:
    matchLabels:
      app: streamlit-ui
  template:
    metadata:
      labels:
        app: streamlit-ui
    spec:
      containers:
        - name: streamlit-ui
          image: musicbrainz-streamlit-ui
          imagePullPolicy: Never
          ports:
            - containerPort: 8501
          envFrom:
            - configMapRef:
                name: musicbrainz-config
          livenessProbe:
            httpGet:
              path: /
              port: 8501
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8501
            initialDelaySeconds: 10
            periodSeconds: 5

---
# Streamlit UI Service (NodePort for external access)
apiVersion: v1
kind: Service
metadata:
  name: streamlit-ui-service
spec:
  type: NodePort
  selector:
    app: streamlit-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8501
      nodePort: 30007  # Access UI at http://<minikube-ip>:30007